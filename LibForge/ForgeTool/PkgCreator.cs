using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ForgeTool
{
  class PkgCreator
  {
    static byte[] paramSFO = {
      0x00, 0x50, 0x53, 0x46, 0x01, 0x01, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00,
      0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x04, 0x02, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
      0x04, 0x00, 0x00, 0x00, 0x13, 0x00, 0x04, 0x02, 0x25, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
      0x08, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x04, 0x02, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
      0x38, 0x00, 0x00, 0x00, 0x25, 0x00, 0x04, 0x02, 0x1D, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
      0x3C, 0x00, 0x00, 0x00, 0x2B, 0x00, 0x04, 0x02, 0x0A, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00,
      0xBC, 0x00, 0x00, 0x00, 0x34, 0x00, 0x04, 0x02, 0x06, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
      0xC8, 0x00, 0x00, 0x00, 0x41, 0x54, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x45, 0x00, 0x43, 0x41,
      0x54, 0x45, 0x47, 0x4F, 0x52, 0x59, 0x00, 0x43, 0x4F, 0x4E, 0x54, 0x45, 0x4E, 0x54, 0x5F, 0x49,
      0x44, 0x00, 0x46, 0x4F, 0x52, 0x4D, 0x41, 0x54, 0x00, 0x54, 0x49, 0x54, 0x4C, 0x45, 0x00, 0x54,
      0x49, 0x54, 0x4C, 0x45, 0x5F, 0x49, 0x44, 0x00, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4F, 0x4E, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x61, 0x63, 0x00, 0x00, 0x55, 0x50, 0x38, 0x38, 0x30, 0x32, 0x2D, 0x43,
      0x55, 0x53, 0x41, 0x30, 0x32, 0x30, 0x38, 0x34, 0x5F, 0x30, 0x30, 0x2D, 0x52, 0x42, 0x43, 0x55,
      0x53, 0x54, 0x4F, 0x4D, 0x58, 0x58, 0x58, 0x58, 0x35, 0x30, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6F, 0x62, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x55, 0x53, 0x41,
      0x30, 0x32, 0x30, 0x38, 0x34, 0x00, 0x00, 0x00, 0x30, 0x31, 0x2E, 0x30, 0x30, 0x00, 0x00, 0x00
    };
    static string gp4 = @"<?xml version=""1.0"" encoding=""utf-8"" standalone=""yes""?>
<psproject fmt=""gp4"" version=""1000"">
  <volume>
    <volume_type>pkg_ps4_ac_data</volume_type>
    <volume_id></volume_id>
    <volume_ts>2018-01-01 00:00:00</volume_ts>
    <package content_id=""UP8802-CUSA02084_00-RBCUSTOMXXXX5000"" passcode=""00000000000000000000000000000000""/>
  </volume>
  <files img_no=""0"">
    <file targ_path=""sce_sys/param.sfo"" orig_path=""param.sfo""/>
FILES  </files>
  <rootdir>
    <dir targ_name=""sce_sys""/>
    <dir targ_name=""songs"">
      <dir targ_name=""custom00001""/>
    </dir>
  </rootdir>
</psproject>";

    public static byte[] MakeParamSfo(string pkgId, string description)
    {
      var idBytes = Encoding.UTF8.GetBytes(pkgId);
      if (idBytes.Length != 36) throw new Exception("Content ID is not formatted correctly. It should be 36 characters");
      var descBytes = Encoding.UTF8.GetBytes(description);
      var param = paramSFO.ToArray();
      Array.Copy(idBytes, 0, param, 200, 36);
      Array.Copy(descBytes, 0, param, 252, Math.Min(descBytes.Length, 128));
      return param;
    }

    public static byte[] MakeGp4(string pkgId, string shortname, string[] files)
    {
      var fileSb = new StringBuilder();
      foreach(var f in files)
      {
        fileSb.AppendLine($"    <file targ_path=\"{f}\" orig_path=\"{f.Replace('/', '\\')}\"/>");
      }
      var project = gp4.Replace("UP8802-CUSA02084_00-RBCUSTOMXXXX5000", pkgId)
                       .Replace("custom00001", shortname)
                       .Replace("FILES", fileSb.ToString());
      return Encoding.UTF8.GetBytes(project);
    }
  }
}
